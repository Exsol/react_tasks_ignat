{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/JuniorPlus.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","item","avatar","src","alt","name","message_body","message_item","msg","user_name","messages","message_time","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","row","affair","_id","priority","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","input","trim","testSpanError","btn","GreetingContainer","users","addUserCallback","setName","setError","length","v1","alert","HW3","setUsers","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","Junior","JuniorPlus","PATH","Pages","path","element","to","Header","isShown","setIsShown","menu","onMouseEnter","onMouseLeave","isActive","activeLink","defaultLink","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7e9c4038.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2GABv\",\"avatar\":\"Message_avatar__3D-HD\",\"item\":\"Message_item__1vZNU\",\"message_body\":\"Message_message_body__1eUDP\",\"message_item\":\"Message_message_item__-9tTu\",\"msg\":\"Message_msg__3PP2D\",\"message_time\":\"Message_message_time__3XQzI\",\"user_name\":\"Message_user_name__2lCi-\",\"messages\":\"Message_messages__332Ew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Header_menu__3szs4\",\"activeLink\":\"Header_activeLink__x6260\",\"defaultLink\":\"Header_defaultLink__1uUwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Greeting_btn__2mMiP\",\"input\":\"Greeting_input__3uIAG\",\"error\":\"Greeting_error__NALEA\",\"success\":\"Greeting_success__1HvBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2qIU2\",\"errorInput\":\"SuperInputText_errorInput__P_7Bo\",\"error\":\"SuperInputText_error__2Mxnw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__13Vrw\",\"green\":\"HW4_green__LO3pL\",\"column\":\"HW4_column__1Tk35\",\"testSpanError\":\"HW4_testSpanError__1ruiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3ZgUA\",\"red\":\"SuperButton_red__3GM5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__89bCw\",\"spanClassName\":\"SuperCheckbox_spanClassName__1HW7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3jb3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Affair_row__1TCH6\"};","import React from 'react'\nimport s from \"./Message.module.css\"\ntype messageType={\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nfunction Message(props:messageType) {\n    return (\n        <div className={s.message}>\n            <div className={`${s.item} ${s.avatar}`}><img src={props.avatar} alt={props.name}/></div>\n            <div className={`${s.item} ${s.message_body}`}>\n                <div className={s.message_item}>\n                    <div className={s.msg}>\n                        <div className={s.user_name}>{props.name}</div>\n                        <div className={s.messages}>{props.message}</div>\n                    </div>\n                </div>\n                <div className={`${s.message_item} ${s.message_time}`}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message';\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name   ',\n    message: 'some text https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpghttps://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpghttps://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpghttps://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpghttps://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport s from \"./Affair.module.css\"\nimport {AffairTypeArray} from './HW2';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n\n    affair: AffairTypeArray // need to fix any\n    deleteAffairCallback: (s:number)=>void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div className={s.row}>\n            <div>{props.affair._id}</div>\n            <div>{props.affair.name}</div>\n            <div>{props.affair.priority}</div>\n            {/*<button onClick={deleteCallback}>X</button>*/}\n            <SuperButton red onClick={deleteCallback}>X</SuperButton>\n\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, AffairTypeArray, FilterType} from './HW2'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType\n    setFilter: any\n    deleteAffairCallback: (_id: number)=> void\n}\n\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairTypeArray) => (\n\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => { return props.setFilter('all') }\n    const setHigh = () => { return props.setFilter('high')}\n    const setMiddle = () => { return props.setFilter('middle')}\n    const setLow = () => { return props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n            {/*<button onClick={setAll}>All</button>*/}\n            {/*<button onClick={setHigh}>High</button>*/}\n            {/*<button onClick={setMiddle}>Middle</button>*/}\n            {/*<button onClick={setLow}>Low</button>*/}\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' |'low'| 'middle'\nexport type AffairType = Array<AffairTypeArray>\n\nexport type AffairTypeArray = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: any = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType, filter: FilterType): AffairType => { // need to fix any\n     if (filter === 'high') return affairs.filter( (a)=>a.priority === \"high\" )\n     else if (filter === 'low') return affairs.filter( (a)=>a.priority === \"low\" )\n     else if (filter === 'middle') return affairs.filter( (a)=>a.priority === \"middle\" )\n     else return affairs\n}\n\nexport const deleteAffair = (affairs: AffairType, _id: number): AffairType => { // need to fix any\n    return affairs.filter( (a)=> a._id !== _id )\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${className ? className : s.superInput} ${error ? s.errorInput : ''} ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport {errorInputType} from './GreetingContainer';\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: string) => void // need to fix any\n    addUser: (e: Array<string>) => void // need to fix any\n    error: string// need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n    const setNameCallbackHandler = (e: React.FormEvent<HTMLInputElement>) => {\n        error = \"\";\n        setNameCallback(e.currentTarget.value)\n    }\n    const addUserHandler = () => {\n        addUser([name])\n    }\n    const onKeyPressHandler = () => {\n        // if( e.key == 'Enter' ){\n        //     if (name.trim() !== '') {\n        //         addUser([name])\n        //     }else{\n        //         addUser([''])\n        //     }\n        // }\n        if (name.trim() !== '') {\n            addUser([name])\n        }else{\n            addUser([''])\n        }\n\n    }\n    const inputClass = error ? s.error : s.input // need to fix with (?:)\n\n    return (\n        <div>\n            {/*<input value={name} onKeyPress={onKeyPressHandler} onChange={setNameCallbackHandler} className={s.input +\" \" +inputClass}/>*/}\n            <SuperInputText\n                value={name}\n                onChangeText={setNameCallback}\n                onEnter={onKeyPressHandler}\n                error={error}\n                spanClassName={s.testSpanError}\n\n            />\n            {/*<span>{error}</span>*/}\n            <button className={s.btn} onClick={addUserHandler}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\nimport {v1} from 'uuid';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (e: string, _id: string) => void // need to fix any\n}\nexport type errorInputType= boolean | null | \"\";\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (name: string) => { // need to fix any\n        setError('')\n        setName(name) // need to fix\n    }\n    const addUser = () => {\n        if (name.trim() !== '') {\n            setError('')\n            addUserCallback(name.trim(), v1())\n            setName('');\n            alert(`Hello ${name} !!`) // need to fix\n        } else {\n            setError(\"Имя должно содержать символы\")\n            alert(\"Имя должно содержать символы\")\n        }\n\n    }\n\n\n    let totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string,_id:string) => { // need to fix any\n        setUsers([ ...users,{_id:_id,name:name}]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)// если есть onChange запускаем его\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked) //есть есть onChangeChecked запускаем его и передаем текущее значение checkbox\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue}// проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <h1>Pre-Junior</h1>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\r\n\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <h1>Junior level</h1>\r\n            {/*<HW6/>*/}\r\n            {/*<HW7/>*/}\r\n            {/*<HW8/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            <h1>Junior Plus level</h1>\r\n            {/*<HW9/>*/}\r\n            {/*<HW10/>*/}\r\n            {/*<HW11/>*/}\r\n            {/*<HW12/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React, {useState} from 'react'\nimport {Navigate, Route, Routes} from 'react-router-dom';\nimport PreJunior from './pages/PreJunior';\nimport Error404 from './pages/Error404';\nimport Junior from './pages/Junior';\nimport JuniorPlus from './pages/JuniorPlus';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n}\n\nfunction Pages() {\n\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'/*'} element={<Error404/>}/>\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React, {useState} from 'react'\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from './Pages';\nimport s from './Header.module.css';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\n\n//тут можно было бы вынести в отдельный компонент и запамить что бы избавиться от повторения,\n//но в задаче вроде такого не стояло, так что пускай будет так)\n\nfunction Header() {\n    const [isShown, setIsShown] = useState<boolean>(false);\n    return (\n        <div className={s.menu} onMouseEnter={() => setIsShown(true)} onMouseLeave={() => setIsShown(false)} >\n            {isShown &&  (\n            <div>\n                <NavLink className={({isActive}) => isActive ? s.activeLink : s.defaultLink} to={PATH.PRE_JUNIOR}>Pre Junior</NavLink>\n                <NavLink className={({isActive}) => isActive ? s.activeLink : s.defaultLink} to={PATH.JUNIOR}> Junior</NavLink>\n                <NavLink className={({isActive}) => isActive ? s.activeLink : s.defaultLink} to={PATH.JUNIOR_PLUS}>Junior PLUS</NavLink>\n            </div>\n            ) || (<SuperButton className={s.activeLink}>Show menu</SuperButton>)}\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from 'react-router-dom';\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5-rrd-v6/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}